def solve(a):

    class Operation:
        def __init__(self, to_index, from_index):
            self.to_index = to_index
            self.from_index = from_index


    
    operations = []
    positive_index = next((i for i, val in enumerate(a) if val > 0), None)
    

    if positive_index is not None:
        for i in range(10):
            operations.append(Operation(positive_index, positive_index))
        for i in range(positive_index + 1, len(a)):
            operations.append(Operation(i, i - 1))
        for i in range(positive_index - 1, -1, -1):
            operations.append(Operation(i, i + 1))
        for i in range(1, len(a)):
            operations.append(Operation(i, i - 1))
    else:
        for i in range(len(a) - 2, -1, -1):
            operations.append(Operation(i, i + 1))


    return f"{len(operations)}\n" + "\n".join(f"{operation.to_index + 1} {operation.from_index + 1}" for operation in operations)


def main():
    t = int(input())
    for _ in range(t):
        n = int(input())
        a = list(map(int, input().split()))
        print(solve(a))

if __name__ == "__main__":
    main()
